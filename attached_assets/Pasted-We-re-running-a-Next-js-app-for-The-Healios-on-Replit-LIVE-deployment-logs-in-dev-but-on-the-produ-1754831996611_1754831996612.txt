We’re running a Next.js app for The Healios on Replit. LIVE deployment logs in dev, but on the production URL the login flow redirects to a 404 after auth. Please run the following diagnose → patch → verify plan end‑to‑end.

1) Identify stack and versioning
Detect if this is Next.js (pages or app router). Confirm Node ≥ 18, Next ≥ 13.

Confirm start/build scripts:

"build": "next build", "start": "next start -p 3000".

Ensure the deployment target is the Node server (not static export). We need server routes for /api/auth/*.
(Why: Next.js gives us hybrid SSR and API routes; the login callback is an API route and must exist on the server build.)

2) Check authentication routes exist
If using NextAuth, verify we have the catch‑all API route:

pages/api/auth/[...nextauth].ts (pages router) or app/api/auth/[...nextauth]/route.ts (app router).

Ensure the route builds with no type or import errors.
(If missing, generate it with a minimal provider config so /api/auth/* resolves.)

3) Fix callback/base URL config (primary 404 cause)
Compute the exact live URL Replit issued (HTTPS): https://<repl-project-name>.<owner>.repl.co or the custom domain.

Set the correct public and server URLs in Replit Secrets:

NEXTAUTH_URL=https://<live-domain>

If using NextAuth v5: AUTH_URL=https://<live-domain> and AUTH_SECRET=<generated>

If using Supabase Auth helpers: NEXT_PUBLIC_SITE_URL=https://<live-domain>

If using Auth0: set AUTH0_ISSUER, AUTH0_CLIENT_ID, AUTH0_CLIENT_SECRET, and include allowed callback/logout URLs in the Auth0 dashboard that match:

https://<live-domain>/api/auth/callback/* and https://<live-domain>/api/auth/callback/auth0

Move any hardcoded localhost URLs into secrets. Rebuild.
(Why: on Replit, HTTPS + Secrets are standard; wrong callback/base URLs almost always yield 404 or CSRF errors after provider redirect.)

4) Verify NextAuth/Supabase/Auth0 config
For NextAuth:

Ensure secret (or AUTH_SECRET) is set.

If using custom pages.signIn/pages.error, make sure those routes exist in prod.

For Auth0:

Make sure your Auth0 “Application” has Allowed Callback URLs and Allowed Logout URLs pointing to the LIVE domain, not localhost.

For Supabase Auth:

Confirm SUPABASE_URL, SUPABASE_ANON_KEY set in Secrets; NEXT_PUBLIC_ variants used client‑side.
(Why: selecting an auth provider and wiring callbacks is the standard approach in this stack.)

5) Check Next config and routing gotchas
Review next.config.js:

Remove any incorrect basePath or assetPrefix that could break /api/auth/*.

Ensure no SPA catch‑all rewrites are swallowing /api/*. Avoid global rewrites like /:path* -> / that hijack API routes.

If using the app router, confirm no Route Handlers shadow /api/auth/*.

If you added custom trailingSlash or headers/rewrites, test /api/auth/signin and the provider callback path directly in the browser.

6) Environment and build parity
Ensure process.env in production contains the same critical keys as dev.

If using NEXT_PUBLIC_* keys, confirm they match the LIVE domain.

Delete .next and rebuild to clear stale routes.

7) Logs and smoke tests
Tail the Replit deployment logs. Attempt login.

Look for 404 on /api/auth/callback/* or /api/auth/session.

Add a temporary health route:

pages/api/health.ts or app/api/health/route.ts returning { ok: true, url: process.env.NEXTAUTH_URL } to confirm server/API availability in prod.

8) Security sanity (keep enabled)
Keep HTTPS, secure headers, and secrets in Replit Secrets; don’t hardcode keys.

Verify CSRF/session cookies behave on the production domain.
(Why: secure deployment + secrets are first‑class on Replit.)

9) If the project is not Next.js
Django: set ALLOWED_HOSTS = ["<live-domain>", "<repl-domain>"], correct LOGIN_REDIRECT_URL, check CSRF trusted origins, and ensure auth URL names match templates. Rebuild and test. (Django has robust auth, CSRF, and admin out‑of‑the‑box.)

Strapi + Frontend: ensure the frontend’s auth callback points to the correct API URL and that CORS and public routes are configured.

10) Deliverables
Fix or add the missing auth route(s).

Correct env and callback URLs for the LIVE domain.

Remove any rewrite/basePath conflicts.

Show logs proving a successful end‑to‑end login.

Document final env vars and a short runbook.

Notes for you (Replit AI):

Use Replit’s Secrets Manager for all keys. Do not commit them.

Keep HTTPS enabled.

If uncertain, scaffold a minimal NextAuth config with one provider (Email or Credentials) to confirm /api/auth/* resolves in prod, then re‑apply the real provider.
(This stack is chosen for hybrid SSR + API routes, strong ecosystem, and quick secure deployment on Replit.)