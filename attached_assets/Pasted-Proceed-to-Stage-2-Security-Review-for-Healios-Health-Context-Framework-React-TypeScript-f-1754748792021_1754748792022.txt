Proceed to Stage 2 – Security Review for Healios Health.

Context:
- Framework: React + TypeScript frontend, Express.js backend, PostgreSQL (Drizzle ORM)
- Production domain: thehealios.com (all prior “wildclone.com” refs must be considered incorrect)
- E-commerce: Supplements, checkout, subscriptions, admin dashboard, AI assistant
- Prior findings: Domain mismatch, missing cookie consent, incomplete product compliance info

Security Review Tasks:

1) TLS & Transport Security
   - Confirm site enforces HTTPS across all routes.
   - Check HSTS headers with subdomain coverage.
   - Scan for mixed content (HTTP assets on HTTPS pages).

2) Authentication & Session Security
   - Verify password hashing algorithm (bcrypt, argon2).
   - Check login and session token handling (expiry, refresh logic, secure & HttpOnly flags, SameSite settings).
   - Test rate limiting on auth endpoints.

3) Input Validation & Output Encoding
   - Inspect API request validation (Zod/express-validator) for all routes, especially:
     /api/auth/*
     /api/cart, /api/subscriptions
     /api/ai-assistant
   - Look for injection risks in Drizzle queries, template rendering, or AI assistant prompt handling.

4) API & CORS Policies
   - Review CORS configuration: allowed origins, methods, headers.
   - Ensure APIs are not exposed to wildcard origins.

5) CSRF & Clickjacking Protections
   - Confirm CSRF tokens on all state-changing POST/PUT/DELETE requests.
   - Check for X-Frame-Options or frame-ancestors in CSP.

6) Secure Headers & CSP
   - Evaluate existing Helmet config or equivalent.
   - Confirm Content-Security-Policy, Referrer-Policy, X-Content-Type-Options, Permissions-Policy, etc.
   - Validate CSP allows only required script/style/img sources.

7) Secrets & Key Management
   - Confirm Stripe, Google Cloud, OpenAI, and email service keys are loaded from secure environment variables only.
   - Check no secrets are exposed in client-side code or public repos.

8) File & Media Handling
   - Inspect upload handling to Google Cloud Storage:
     • File type and size restrictions
     • Virus scanning / content-type enforcement
     • Public/private ACL handling

9) Webhook Security
   - Validate signature verification for Stripe and any other inbound webhooks.

10) Admin Dashboard Hardening
    - RBAC enforcement on /admin/*
    - No direct object reference vulnerabilities
    - Audit logging of admin actions

Deliverables:
- Summary [≤6 bullets]
- Findings Table: [ID | Severity | Area | Evidence (URL or file:line) | Impact | Confidence%]
- Minimal Plan (fix most critical first, reversible)
- Risks & Rollback
- Open Questions

Output only the Stage 2 report in the specified format.
